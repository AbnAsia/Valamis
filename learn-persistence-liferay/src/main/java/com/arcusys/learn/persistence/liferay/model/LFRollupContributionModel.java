package com.arcusys.learn.persistence.liferay.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.math.BigDecimal;

/**
 * The base model interface for the LFRollupContribution service. Represents a row in the &quot;Learn_LFRollupContribution&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.arcusys.learn.persistence.liferay.model.impl.LFRollupContributionModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.arcusys.learn.persistence.liferay.model.impl.LFRollupContributionImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see LFRollupContribution
 * @see com.arcusys.learn.persistence.liferay.model.impl.LFRollupContributionImpl
 * @see com.arcusys.learn.persistence.liferay.model.impl.LFRollupContributionModelImpl
 * @generated
 */
public interface LFRollupContributionModel extends BaseModel<LFRollupContribution> {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this interface directly. All methods that expect a l f rollup contribution model instance should use the {@link LFRollupContribution} interface instead.
     */

    /**
     * Returns the primary key of this l f rollup contribution.
     *
     * @return the primary key of this l f rollup contribution
     */
    public long getPrimaryKey();

    /**
     * Sets the primary key of this l f rollup contribution.
     *
     * @param primaryKey the primary key of this l f rollup contribution
     */
    public void setPrimaryKey(long primaryKey);

    /**
     * Returns the ID of this l f rollup contribution.
     *
     * @return the ID of this l f rollup contribution
     */
    public long getId();

    /**
     * Sets the ID of this l f rollup contribution.
     *
     * @param id the ID of this l f rollup contribution
     */
    public void setId(long id);

    /**
     * Returns the sequencing i d of this l f rollup contribution.
     *
     * @return the sequencing i d of this l f rollup contribution
     */
    public Integer getSequencingID();

    /**
     * Sets the sequencing i d of this l f rollup contribution.
     *
     * @param sequencingID the sequencing i d of this l f rollup contribution
     */
    public void setSequencingID(Integer sequencingID);

    /**
     * Returns the contribute to satisfied of this l f rollup contribution.
     *
     * @return the contribute to satisfied of this l f rollup contribution
     */
    @AutoEscape
    public String getContributeToSatisfied();

    /**
     * Sets the contribute to satisfied of this l f rollup contribution.
     *
     * @param contributeToSatisfied the contribute to satisfied of this l f rollup contribution
     */
    public void setContributeToSatisfied(String contributeToSatisfied);

    /**
     * Returns the contribute to not satisfied of this l f rollup contribution.
     *
     * @return the contribute to not satisfied of this l f rollup contribution
     */
    @AutoEscape
    public String getContributeToNotSatisfied();

    /**
     * Sets the contribute to not satisfied of this l f rollup contribution.
     *
     * @param contributeToNotSatisfied the contribute to not satisfied of this l f rollup contribution
     */
    public void setContributeToNotSatisfied(String contributeToNotSatisfied);

    /**
     * Returns the contribute to completed of this l f rollup contribution.
     *
     * @return the contribute to completed of this l f rollup contribution
     */
    @AutoEscape
    public String getContributeToCompleted();

    /**
     * Sets the contribute to completed of this l f rollup contribution.
     *
     * @param contributeToCompleted the contribute to completed of this l f rollup contribution
     */
    public void setContributeToCompleted(String contributeToCompleted);

    /**
     * Returns the contribute to incomplete of this l f rollup contribution.
     *
     * @return the contribute to incomplete of this l f rollup contribution
     */
    @AutoEscape
    public String getContributeToIncomplete();

    /**
     * Sets the contribute to incomplete of this l f rollup contribution.
     *
     * @param contributeToIncomplete the contribute to incomplete of this l f rollup contribution
     */
    public void setContributeToIncomplete(String contributeToIncomplete);

    /**
     * Returns the objective measure weight of this l f rollup contribution.
     *
     * @return the objective measure weight of this l f rollup contribution
     */
    public BigDecimal getObjectiveMeasureWeight();

    /**
     * Sets the objective measure weight of this l f rollup contribution.
     *
     * @param objectiveMeasureWeight the objective measure weight of this l f rollup contribution
     */
    public void setObjectiveMeasureWeight(BigDecimal objectiveMeasureWeight);

    /**
     * Returns the measure satisfaction if active of this l f rollup contribution.
     *
     * @return the measure satisfaction if active of this l f rollup contribution
     */
    public boolean getMeasureSatisfactionIfActive();

    /**
     * Returns <code>true</code> if this l f rollup contribution is measure satisfaction if active.
     *
     * @return <code>true</code> if this l f rollup contribution is measure satisfaction if active; <code>false</code> otherwise
     */
    public boolean isMeasureSatisfactionIfActive();

    /**
     * Sets whether this l f rollup contribution is measure satisfaction if active.
     *
     * @param measureSatisfactionIfActive the measure satisfaction if active of this l f rollup contribution
     */
    public void setMeasureSatisfactionIfActive(
        boolean measureSatisfactionIfActive);

    @Override
    public boolean isNew();

    @Override
    public void setNew(boolean n);

    @Override
    public boolean isCachedModel();

    @Override
    public void setCachedModel(boolean cachedModel);

    @Override
    public boolean isEscapedModel();

    @Override
    public Serializable getPrimaryKeyObj();

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj);

    @Override
    public ExpandoBridge getExpandoBridge();

    @Override
    public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

    @Override
    public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext);

    @Override
    public Object clone();

    @Override
    public int compareTo(LFRollupContribution lfRollupContribution);

    @Override
    public int hashCode();

    @Override
    public CacheModel<LFRollupContribution> toCacheModel();

    @Override
    public LFRollupContribution toEscapedModel();

    @Override
    public LFRollupContribution toUnescapedModel();

    @Override
    public String toString();

    @Override
    public String toXmlString();
}
