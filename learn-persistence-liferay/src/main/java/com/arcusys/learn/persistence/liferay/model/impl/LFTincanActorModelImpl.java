package com.arcusys.learn.persistence.liferay.model.impl;

import com.arcusys.learn.persistence.liferay.model.LFTincanActor;
import com.arcusys.learn.persistence.liferay.model.LFTincanActorModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the LFTincanActor service. Represents a row in the &quot;Learn_LFTincanActor&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.arcusys.learn.persistence.liferay.model.LFTincanActorModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link LFTincanActorImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see LFTincanActorImpl
 * @see com.arcusys.learn.persistence.liferay.model.LFTincanActor
 * @see com.arcusys.learn.persistence.liferay.model.LFTincanActorModel
 * @generated
 */
public class LFTincanActorModelImpl extends BaseModelImpl<LFTincanActor>
    implements LFTincanActorModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a l f tincan actor model instance should use the {@link com.arcusys.learn.persistence.liferay.model.LFTincanActor} interface instead.
     */
    public static final String TABLE_NAME = "Learn_LFTincanActor";
    public static final Object[][] TABLE_COLUMNS = {
            { "id_", Types.BIGINT },
            { "tincanID", Types.VARCHAR },
            { "objectType", Types.VARCHAR },
            { "name", Types.CLOB },
            { "mbox", Types.CLOB },
            { "mbox_sha1sum", Types.CLOB },
            { "openid", Types.CLOB },
            { "account", Types.CLOB },
            { "memberOf", Types.CLOB }
        };
    public static final String TABLE_SQL_CREATE = "create table Learn_LFTincanActor (id_ LONG not null primary key,tincanID VARCHAR(75) null,objectType VARCHAR(75) null,name TEXT null,mbox TEXT null,mbox_sha1sum TEXT null,openid TEXT null,account TEXT null,memberOf TEXT null)";
    public static final String TABLE_SQL_DROP = "drop table Learn_LFTincanActor";
    public static final String ORDER_BY_JPQL = " ORDER BY lfTincanActor.id ASC";
    public static final String ORDER_BY_SQL = " ORDER BY Learn_LFTincanActor.id_ ASC";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.arcusys.learn.persistence.liferay.model.LFTincanActor"),
            false);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.arcusys.learn.persistence.liferay.model.LFTincanActor"),
            false);
    public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.column.bitmask.enabled.com.arcusys.learn.persistence.liferay.model.LFTincanActor"),
            true);
    public static long MBOX_COLUMN_BITMASK = 1L;
    public static long MBOX_SHA1SUM_COLUMN_BITMASK = 2L;
    public static long MEMBEROF_COLUMN_BITMASK = 4L;
    public static long NAME_COLUMN_BITMASK = 8L;
    public static long OBJECTTYPE_COLUMN_BITMASK = 16L;
    public static long OPENID_COLUMN_BITMASK = 32L;
    public static long TINCANID_COLUMN_BITMASK = 64L;
    public static long ID_COLUMN_BITMASK = 128L;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.com.arcusys.learn.persistence.liferay.model.LFTincanActor"));
    private static ClassLoader _classLoader = LFTincanActor.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            LFTincanActor.class
        };
    private long _id;
    private String _tincanID;
    private String _originalTincanID;
    private String _objectType;
    private String _originalObjectType;
    private String _name;
    private String _originalName;
    private String _mbox;
    private String _originalMbox;
    private String _mbox_sha1sum;
    private String _originalMbox_sha1sum;
    private String _openid;
    private String _originalOpenid;
    private String _account;
    private String _memberOf;
    private String _originalMemberOf;
    private long _columnBitmask;
    private LFTincanActor _escapedModel;

    public LFTincanActorModelImpl() {
    }

    @Override
    public long getPrimaryKey() {
        return _id;
    }

    @Override
    public void setPrimaryKey(long primaryKey) {
        setId(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _id;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Long) primaryKeyObj).longValue());
    }

    @Override
    public Class<?> getModelClass() {
        return LFTincanActor.class;
    }

    @Override
    public String getModelClassName() {
        return LFTincanActor.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("id", getId());
        attributes.put("tincanID", getTincanID());
        attributes.put("objectType", getObjectType());
        attributes.put("name", getName());
        attributes.put("mbox", getMbox());
        attributes.put("mbox_sha1sum", getMbox_sha1sum());
        attributes.put("openid", getOpenid());
        attributes.put("account", getAccount());
        attributes.put("memberOf", getMemberOf());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Long id = (Long) attributes.get("id");

        if (id != null) {
            setId(id);
        }

        String tincanID = (String) attributes.get("tincanID");

        if (tincanID != null) {
            setTincanID(tincanID);
        }

        String objectType = (String) attributes.get("objectType");

        if (objectType != null) {
            setObjectType(objectType);
        }

        String name = (String) attributes.get("name");

        if (name != null) {
            setName(name);
        }

        String mbox = (String) attributes.get("mbox");

        if (mbox != null) {
            setMbox(mbox);
        }

        String mbox_sha1sum = (String) attributes.get("mbox_sha1sum");

        if (mbox_sha1sum != null) {
            setMbox_sha1sum(mbox_sha1sum);
        }

        String openid = (String) attributes.get("openid");

        if (openid != null) {
            setOpenid(openid);
        }

        String account = (String) attributes.get("account");

        if (account != null) {
            setAccount(account);
        }

        String memberOf = (String) attributes.get("memberOf");

        if (memberOf != null) {
            setMemberOf(memberOf);
        }
    }

    @Override
    public long getId() {
        return _id;
    }

    @Override
    public void setId(long id) {
        _id = id;
    }

    @Override
    public String getTincanID() {
        return _tincanID;
    }

    @Override
    public void setTincanID(String tincanID) {
        _columnBitmask |= TINCANID_COLUMN_BITMASK;

        if (_originalTincanID == null) {
            _originalTincanID = _tincanID;
        }

        _tincanID = tincanID;
    }

    public String getOriginalTincanID() {
        return _originalTincanID;
    }

    @Override
    public String getObjectType() {
        return _objectType;
    }

    @Override
    public void setObjectType(String objectType) {
        _columnBitmask |= OBJECTTYPE_COLUMN_BITMASK;

        if (_originalObjectType == null) {
            _originalObjectType = _objectType;
        }

        _objectType = objectType;
    }

    public String getOriginalObjectType() {
        return _originalObjectType;
    }

    @Override
    public String getName() {
        if (_name == null) {
            return StringPool.BLANK;
        } else {
            return _name;
        }
    }

    @Override
    public void setName(String name) {
        _columnBitmask |= NAME_COLUMN_BITMASK;

        if (_originalName == null) {
            _originalName = _name;
        }

        _name = name;
    }

    public String getOriginalName() {
        return GetterUtil.getString(_originalName);
    }

    @Override
    public String getMbox() {
        return _mbox;
    }

    @Override
    public void setMbox(String mbox) {
        _columnBitmask |= MBOX_COLUMN_BITMASK;

        if (_originalMbox == null) {
            _originalMbox = _mbox;
        }

        _mbox = mbox;
    }

    public String getOriginalMbox() {
        return _originalMbox;
    }

    @Override
    public String getMbox_sha1sum() {
        return _mbox_sha1sum;
    }

    @Override
    public void setMbox_sha1sum(String mbox_sha1sum) {
        _columnBitmask |= MBOX_SHA1SUM_COLUMN_BITMASK;

        if (_originalMbox_sha1sum == null) {
            _originalMbox_sha1sum = _mbox_sha1sum;
        }

        _mbox_sha1sum = mbox_sha1sum;
    }

    public String getOriginalMbox_sha1sum() {
        return _originalMbox_sha1sum;
    }

    @Override
    public String getOpenid() {
        return _openid;
    }

    @Override
    public void setOpenid(String openid) {
        _columnBitmask |= OPENID_COLUMN_BITMASK;

        if (_originalOpenid == null) {
            _originalOpenid = _openid;
        }

        _openid = openid;
    }

    public String getOriginalOpenid() {
        return _originalOpenid;
    }

    @Override
    public String getAccount() {
        return _account;
    }

    @Override
    public void setAccount(String account) {
        _account = account;
    }

    @Override
    public String getMemberOf() {
        return _memberOf;
    }

    @Override
    public void setMemberOf(String memberOf) {
        _columnBitmask |= MEMBEROF_COLUMN_BITMASK;

        if (_originalMemberOf == null) {
            _originalMemberOf = _memberOf;
        }

        _memberOf = memberOf;
    }

    public String getOriginalMemberOf() {
        return _originalMemberOf;
    }

    public long getColumnBitmask() {
        return _columnBitmask;
    }

    @Override
    public ExpandoBridge getExpandoBridge() {
        return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
            LFTincanActor.class.getName(), getPrimaryKey());
    }

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
        ExpandoBridge expandoBridge = getExpandoBridge();

        expandoBridge.setAttributes(serviceContext);
    }

    @Override
    public LFTincanActor toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (LFTincanActor) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        LFTincanActorImpl lfTincanActorImpl = new LFTincanActorImpl();

        lfTincanActorImpl.setId(getId());
        lfTincanActorImpl.setTincanID(getTincanID());
        lfTincanActorImpl.setObjectType(getObjectType());
        lfTincanActorImpl.setName(getName());
        lfTincanActorImpl.setMbox(getMbox());
        lfTincanActorImpl.setMbox_sha1sum(getMbox_sha1sum());
        lfTincanActorImpl.setOpenid(getOpenid());
        lfTincanActorImpl.setAccount(getAccount());
        lfTincanActorImpl.setMemberOf(getMemberOf());

        lfTincanActorImpl.resetOriginalValues();

        return lfTincanActorImpl;
    }

    @Override
    public int compareTo(LFTincanActor lfTincanActor) {
        long primaryKey = lfTincanActor.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof LFTincanActor)) {
            return false;
        }

        LFTincanActor lfTincanActor = (LFTincanActor) obj;

        long primaryKey = lfTincanActor.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return (int) getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
        LFTincanActorModelImpl lfTincanActorModelImpl = this;

        lfTincanActorModelImpl._originalTincanID = lfTincanActorModelImpl._tincanID;

        lfTincanActorModelImpl._originalObjectType = lfTincanActorModelImpl._objectType;

        lfTincanActorModelImpl._originalName = lfTincanActorModelImpl._name;

        lfTincanActorModelImpl._originalMbox = lfTincanActorModelImpl._mbox;

        lfTincanActorModelImpl._originalMbox_sha1sum = lfTincanActorModelImpl._mbox_sha1sum;

        lfTincanActorModelImpl._originalOpenid = lfTincanActorModelImpl._openid;

        lfTincanActorModelImpl._originalMemberOf = lfTincanActorModelImpl._memberOf;

        lfTincanActorModelImpl._columnBitmask = 0;
    }

    @Override
    public CacheModel<LFTincanActor> toCacheModel() {
        LFTincanActorCacheModel lfTincanActorCacheModel = new LFTincanActorCacheModel();

        lfTincanActorCacheModel.id = getId();

        lfTincanActorCacheModel.tincanID = getTincanID();

        String tincanID = lfTincanActorCacheModel.tincanID;

        if ((tincanID != null) && (tincanID.length() == 0)) {
            lfTincanActorCacheModel.tincanID = null;
        }

        lfTincanActorCacheModel.objectType = getObjectType();

        String objectType = lfTincanActorCacheModel.objectType;

        if ((objectType != null) && (objectType.length() == 0)) {
            lfTincanActorCacheModel.objectType = null;
        }

        lfTincanActorCacheModel.name = getName();

        String name = lfTincanActorCacheModel.name;

        if ((name != null) && (name.length() == 0)) {
            lfTincanActorCacheModel.name = null;
        }

        lfTincanActorCacheModel.mbox = getMbox();

        String mbox = lfTincanActorCacheModel.mbox;

        if ((mbox != null) && (mbox.length() == 0)) {
            lfTincanActorCacheModel.mbox = null;
        }

        lfTincanActorCacheModel.mbox_sha1sum = getMbox_sha1sum();

        String mbox_sha1sum = lfTincanActorCacheModel.mbox_sha1sum;

        if ((mbox_sha1sum != null) && (mbox_sha1sum.length() == 0)) {
            lfTincanActorCacheModel.mbox_sha1sum = null;
        }

        lfTincanActorCacheModel.openid = getOpenid();

        String openid = lfTincanActorCacheModel.openid;

        if ((openid != null) && (openid.length() == 0)) {
            lfTincanActorCacheModel.openid = null;
        }

        lfTincanActorCacheModel.account = getAccount();

        String account = lfTincanActorCacheModel.account;

        if ((account != null) && (account.length() == 0)) {
            lfTincanActorCacheModel.account = null;
        }

        lfTincanActorCacheModel.memberOf = getMemberOf();

        String memberOf = lfTincanActorCacheModel.memberOf;

        if ((memberOf != null) && (memberOf.length() == 0)) {
            lfTincanActorCacheModel.memberOf = null;
        }

        return lfTincanActorCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(19);

        sb.append("{id=");
        sb.append(getId());
        sb.append(", tincanID=");
        sb.append(getTincanID());
        sb.append(", objectType=");
        sb.append(getObjectType());
        sb.append(", name=");
        sb.append(getName());
        sb.append(", mbox=");
        sb.append(getMbox());
        sb.append(", mbox_sha1sum=");
        sb.append(getMbox_sha1sum());
        sb.append(", openid=");
        sb.append(getOpenid());
        sb.append(", account=");
        sb.append(getAccount());
        sb.append(", memberOf=");
        sb.append(getMemberOf());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(31);

        sb.append("<model><model-name>");
        sb.append("com.arcusys.learn.persistence.liferay.model.LFTincanActor");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>id</column-name><column-value><![CDATA[");
        sb.append(getId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>tincanID</column-name><column-value><![CDATA[");
        sb.append(getTincanID());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>objectType</column-name><column-value><![CDATA[");
        sb.append(getObjectType());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>name</column-name><column-value><![CDATA[");
        sb.append(getName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>mbox</column-name><column-value><![CDATA[");
        sb.append(getMbox());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>mbox_sha1sum</column-name><column-value><![CDATA[");
        sb.append(getMbox_sha1sum());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>openid</column-name><column-value><![CDATA[");
        sb.append(getOpenid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>account</column-name><column-value><![CDATA[");
        sb.append(getAccount());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>memberOf</column-name><column-value><![CDATA[");
        sb.append(getMemberOf());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
