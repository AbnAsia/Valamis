package com.arcusys.learn.persistence.liferay.model.impl;

import com.arcusys.learn.persistence.liferay.model.LFTincanLrsActivityProfile;
import com.arcusys.learn.persistence.liferay.model.LFTincanLrsActivityProfileModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
* The base model implementation for the LFTincanLrsActivityProfile service. Represents a row in the &quot;Learn_LFTincanLrsActivityProfile&quot; database table, with each column mapped to a property of this class.
*
* <p>
    * This implementation and its corresponding interface {@link com.arcusys.learn.persistence.liferay.model.LFTincanLrsActivityProfileModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link LFTincanLrsActivityProfileImpl}.
    * </p>
*
* @author Brian Wing Shun Chan
* @see LFTincanLrsActivityProfileImpl
* @see com.arcusys.learn.persistence.liferay.model.LFTincanLrsActivityProfile
* @see com.arcusys.learn.persistence.liferay.model.LFTincanLrsActivityProfileModel
* @generated
*/
public class LFTincanLrsActivityProfileModelImpl extends BaseModelImpl<LFTincanLrsActivityProfile>
    implements LFTincanLrsActivityProfileModel {
    /*
    * NOTE FOR DEVELOPERS:
    *
    * Never modify or reference this class directly. All methods that expect a l f tincan lrs activity profile model instance should use the {@link com.arcusys.learn.persistence.liferay.model.LFTincanLrsActivityProfile} interface instead.
    */
    public static final String TABLE_NAME = "Learn_LFTincanLrsActivityProfile";
    public static final Object[][] TABLE_COLUMNS = {
            { "id_", Types.BIGINT },
            { "documentId", Types.INTEGER },
            { "activityId", Types.VARCHAR },
            { "profileId", Types.VARCHAR }
        };
    public static final String TABLE_SQL_CREATE = "create table Learn_LFTincanLrsActivityProfile (id_ LONG not null primary key,documentId INTEGER null,activityId VARCHAR(75) null,profileId VARCHAR(75) null)";
    public static final String TABLE_SQL_DROP = "drop table Learn_LFTincanLrsActivityProfile";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.arcusys.learn.persistence.liferay.model.LFTincanLrsActivityProfile"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.arcusys.learn.persistence.liferay.model.LFTincanLrsActivityProfile"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.column.bitmask.enabled.com.arcusys.learn.persistence.liferay.model.LFTincanLrsActivityProfile"),
            true);
    public static long ACTIVITYID_COLUMN_BITMASK = 1L;
    public static long PROFILEID_COLUMN_BITMASK = 2L;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.com.arcusys.learn.persistence.liferay.model.LFTincanLrsActivityProfile"));
    private static ClassLoader _classLoader = LFTincanLrsActivityProfile.class.getClassLoader();
    private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
            LFTincanLrsActivityProfile.class
        };
    private long _id;
    private Integer _documentId;
    private String _activityId;
    private String _originalActivityId;
    private String _profileId;
    private String _originalProfileId;
    private long _columnBitmask;
    private LFTincanLrsActivityProfile _escapedModelProxy;

    public LFTincanLrsActivityProfileModelImpl() {
    }

    public long getPrimaryKey() {
        return _id;
    }

    public void setPrimaryKey(long primaryKey) {
        setId(primaryKey);
    }

    public Serializable getPrimaryKeyObj() {
        return new Long(_id);
    }

    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Long) primaryKeyObj).longValue());
    }

    public Class<?> getModelClass() {
        return LFTincanLrsActivityProfile.class;
    }

    public String getModelClassName() {
        return LFTincanLrsActivityProfile.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("id", getId());
        attributes.put("documentId", getDocumentId());
        attributes.put("activityId", getActivityId());
        attributes.put("profileId", getProfileId());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Long id = (Long) attributes.get("id");

        if (id != null) {
            setId(id);
        }

        Integer documentId = (Integer) attributes.get("documentId");

        if (documentId != null) {
            setDocumentId(documentId);
        }

        String activityId = (String) attributes.get("activityId");

        if (activityId != null) {
            setActivityId(activityId);
        }

        String profileId = (String) attributes.get("profileId");

        if (profileId != null) {
            setProfileId(profileId);
        }
    }

    public long getId() {
        return _id;
    }

    public void setId(long id) {
        _id = id;
    }

    public Integer getDocumentId() {
        return _documentId;
    }

    public void setDocumentId(Integer documentId) {
        _documentId = documentId;
    }

    public String getActivityId() {
        return _activityId;
    }

    public void setActivityId(String activityId) {
        _columnBitmask |= ACTIVITYID_COLUMN_BITMASK;

        if (_originalActivityId == null) {
            _originalActivityId = _activityId;
        }

        _activityId = activityId;
    }

    public String getOriginalActivityId() {
        return _originalActivityId;
    }

    public String getProfileId() {
        return _profileId;
    }

    public void setProfileId(String profileId) {
        _columnBitmask |= PROFILEID_COLUMN_BITMASK;

        if (_originalProfileId == null) {
            _originalProfileId = _profileId;
        }

        _profileId = profileId;
    }

    public String getOriginalProfileId() {
        return _originalProfileId;
    }

    public long getColumnBitmask() {
        return _columnBitmask;
    }

    @Override
    public ExpandoBridge getExpandoBridge() {
        return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
            LFTincanLrsActivityProfile.class.getName(), getPrimaryKey());
    }

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
        ExpandoBridge expandoBridge = getExpandoBridge();

        expandoBridge.setAttributes(serviceContext);
    }

    @Override
    public LFTincanLrsActivityProfile toEscapedModel() {
        if (_escapedModelProxy == null) {
            _escapedModelProxy = (LFTincanLrsActivityProfile) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelProxyInterfaces,
                    new AutoEscapeBeanHandler(this));
        }

        return _escapedModelProxy;
    }

    @Override
    public Object clone() {
        LFTincanLrsActivityProfileImpl lfTincanLrsActivityProfileImpl = new LFTincanLrsActivityProfileImpl();

        lfTincanLrsActivityProfileImpl.setId(getId());
        lfTincanLrsActivityProfileImpl.setDocumentId(getDocumentId());
        lfTincanLrsActivityProfileImpl.setActivityId(getActivityId());
        lfTincanLrsActivityProfileImpl.setProfileId(getProfileId());

        lfTincanLrsActivityProfileImpl.resetOriginalValues();

        return lfTincanLrsActivityProfileImpl;
    }

    public int compareTo(LFTincanLrsActivityProfile lfTincanLrsActivityProfile) {
        long primaryKey = lfTincanLrsActivityProfile.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }

        LFTincanLrsActivityProfile lfTincanLrsActivityProfile = null;

        try {
            lfTincanLrsActivityProfile = (LFTincanLrsActivityProfile) obj;
        } catch (ClassCastException cce) {
            return false;
        }

        long primaryKey = lfTincanLrsActivityProfile.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return (int) getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
        LFTincanLrsActivityProfileModelImpl lfTincanLrsActivityProfileModelImpl = this;

        lfTincanLrsActivityProfileModelImpl._originalActivityId = lfTincanLrsActivityProfileModelImpl._activityId;

        lfTincanLrsActivityProfileModelImpl._originalProfileId = lfTincanLrsActivityProfileModelImpl._profileId;

        lfTincanLrsActivityProfileModelImpl._columnBitmask = 0;
    }

    @Override
    public CacheModel<LFTincanLrsActivityProfile> toCacheModel() {
        LFTincanLrsActivityProfileCacheModel lfTincanLrsActivityProfileCacheModel =
            new LFTincanLrsActivityProfileCacheModel();

        lfTincanLrsActivityProfileCacheModel.id = getId();

        lfTincanLrsActivityProfileCacheModel.documentId = getDocumentId();

        lfTincanLrsActivityProfileCacheModel.activityId = getActivityId();

        String activityId = lfTincanLrsActivityProfileCacheModel.activityId;

        if ((activityId != null) && (activityId.length() == 0)) {
            lfTincanLrsActivityProfileCacheModel.activityId = null;
        }

        lfTincanLrsActivityProfileCacheModel.profileId = getProfileId();

        String profileId = lfTincanLrsActivityProfileCacheModel.profileId;

        if ((profileId != null) && (profileId.length() == 0)) {
            lfTincanLrsActivityProfileCacheModel.profileId = null;
        }

        return lfTincanLrsActivityProfileCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(9);

        sb.append("{id=");
        sb.append(getId());
        sb.append(", documentId=");
        sb.append(getDocumentId());
        sb.append(", activityId=");
        sb.append(getActivityId());
        sb.append(", profileId=");
        sb.append(getProfileId());
        sb.append("}");

        return sb.toString();
    }

    public String toXmlString() {
        StringBundler sb = new StringBundler(16);

        sb.append("<model><model-name>");
        sb.append(
            "com.arcusys.learn.persistence.liferay.model.LFTincanLrsActivityProfile");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>id</column-name><column-value><![CDATA[");
        sb.append(getId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>documentId</column-name><column-value><![CDATA[");
        sb.append(getDocumentId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>activityId</column-name><column-value><![CDATA[");
        sb.append(getActivityId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>profileId</column-name><column-value><![CDATA[");
        sb.append(getProfileId());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
