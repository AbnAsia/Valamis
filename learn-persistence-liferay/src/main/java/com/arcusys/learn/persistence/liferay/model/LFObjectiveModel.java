package com.arcusys.learn.persistence.liferay.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.math.BigDecimal;

/**
 * The base model interface for the LFObjective service. Represents a row in the &quot;Learn_LFObjective&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.arcusys.learn.persistence.liferay.model.impl.LFObjectiveModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.arcusys.learn.persistence.liferay.model.impl.LFObjectiveImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see LFObjective
 * @see com.arcusys.learn.persistence.liferay.model.impl.LFObjectiveImpl
 * @see com.arcusys.learn.persistence.liferay.model.impl.LFObjectiveModelImpl
 * @generated
 */
public interface LFObjectiveModel extends BaseModel<LFObjective> {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this interface directly. All methods that expect a l f objective model instance should use the {@link LFObjective} interface instead.
     */

    /**
     * Returns the primary key of this l f objective.
     *
     * @return the primary key of this l f objective
     */
    public long getPrimaryKey();

    /**
     * Sets the primary key of this l f objective.
     *
     * @param primaryKey the primary key of this l f objective
     */
    public void setPrimaryKey(long primaryKey);

    /**
     * Returns the lf ID of this l f objective.
     *
     * @return the lf ID of this l f objective
     */
    public long getLfId();

    /**
     * Sets the lf ID of this l f objective.
     *
     * @param lfId the lf ID of this l f objective
     */
    public void setLfId(long lfId);

    /**
     * Returns the sequencing i d of this l f objective.
     *
     * @return the sequencing i d of this l f objective
     */
    public Integer getSequencingID();

    /**
     * Sets the sequencing i d of this l f objective.
     *
     * @param sequencingID the sequencing i d of this l f objective
     */
    public void setSequencingID(Integer sequencingID);

    /**
     * Returns the satisfied by measure of this l f objective.
     *
     * @return the satisfied by measure of this l f objective
     */
    public boolean getSatisfiedByMeasure();

    /**
     * Returns <code>true</code> if this l f objective is satisfied by measure.
     *
     * @return <code>true</code> if this l f objective is satisfied by measure; <code>false</code> otherwise
     */
    public boolean isSatisfiedByMeasure();

    /**
     * Sets whether this l f objective is satisfied by measure.
     *
     * @param satisfiedByMeasure the satisfied by measure of this l f objective
     */
    public void setSatisfiedByMeasure(boolean satisfiedByMeasure);

    /**
     * Returns the identifier of this l f objective.
     *
     * @return the identifier of this l f objective
     */
    @AutoEscape
    public String getIdentifier();

    /**
     * Sets the identifier of this l f objective.
     *
     * @param identifier the identifier of this l f objective
     */
    public void setIdentifier(String identifier);

    /**
     * Returns the min normalized measure of this l f objective.
     *
     * @return the min normalized measure of this l f objective
     */
    public BigDecimal getMinNormalizedMeasure();

    /**
     * Sets the min normalized measure of this l f objective.
     *
     * @param minNormalizedMeasure the min normalized measure of this l f objective
     */
    public void setMinNormalizedMeasure(BigDecimal minNormalizedMeasure);

    /**
     * Returns the is primary of this l f objective.
     *
     * @return the is primary of this l f objective
     */
    public Boolean getIsPrimary();

    /**
     * Sets the is primary of this l f objective.
     *
     * @param isPrimary the is primary of this l f objective
     */
    public void setIsPrimary(Boolean isPrimary);

    @Override
    public boolean isNew();

    @Override
    public void setNew(boolean n);

    @Override
    public boolean isCachedModel();

    @Override
    public void setCachedModel(boolean cachedModel);

    @Override
    public boolean isEscapedModel();

    @Override
    public Serializable getPrimaryKeyObj();

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj);

    @Override
    public ExpandoBridge getExpandoBridge();

    @Override
    public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

    @Override
    public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext);

    @Override
    public Object clone();

    @Override
    public int compareTo(LFObjective lfObjective);

    @Override
    public int hashCode();

    @Override
    public CacheModel<LFObjective> toCacheModel();

    @Override
    public LFObjective toEscapedModel();

    @Override
    public LFObjective toUnescapedModel();

    @Override
    public String toString();

    @Override
    public String toXmlString();
}
