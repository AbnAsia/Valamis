package com.arcusys.learn.persistence.liferay.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.math.BigDecimal;

/**
* The base model interface for the LFRollupRule service. Represents a row in the &quot;Learn_LFRollupRule&quot; database table, with each column mapped to a property of this class.
*
* <p>
    * This interface and its corresponding implementation {@link com.arcusys.learn.persistence.liferay.model.impl.LFRollupRuleModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.arcusys.learn.persistence.liferay.model.impl.LFRollupRuleImpl}.
    * </p>
*
* @author Brian Wing Shun Chan
* @see LFRollupRule
* @see com.arcusys.learn.persistence.liferay.model.impl.LFRollupRuleImpl
* @see com.arcusys.learn.persistence.liferay.model.impl.LFRollupRuleModelImpl
* @generated
*/
public interface LFRollupRuleModel extends BaseModel<LFRollupRule> {
    /*
    * NOTE FOR DEVELOPERS:
    *
    * Never modify or reference this interface directly. All methods that expect a l f rollup rule model instance should use the {@link LFRollupRule} interface instead.
    */

    /**
    * Returns the primary key of this l f rollup rule.
    *
    * @return the primary key of this l f rollup rule
    */
    public long getPrimaryKey();

    /**
    * Sets the primary key of this l f rollup rule.
    *
    * @param primaryKey the primary key of this l f rollup rule
    */
    public void setPrimaryKey(long primaryKey);

    /**
    * Returns the ID of this l f rollup rule.
    *
    * @return the ID of this l f rollup rule
    */
    public long getId();

    /**
        * Sets the ID of this l f rollup rule.
    *
    * @param id the ID of this l f rollup rule
    */
    public void setId(long id);

    /**
    * Returns the sequencing i d of this l f rollup rule.
    *
    * @return the sequencing i d of this l f rollup rule
    */
    public Integer getSequencingID();

    /**
        * Sets the sequencing i d of this l f rollup rule.
    *
    * @param sequencingID the sequencing i d of this l f rollup rule
    */
    public void setSequencingID(Integer sequencingID);

    /**
    * Returns the combination of this l f rollup rule.
    *
    * @return the combination of this l f rollup rule
    */
    @AutoEscape
    public String getCombination();

    /**
        * Sets the combination of this l f rollup rule.
    *
    * @param combination the combination of this l f rollup rule
    */
    public void setCombination(String combination);

    /**
    * Returns the child activity set of this l f rollup rule.
    *
    * @return the child activity set of this l f rollup rule
    */
    @AutoEscape
    public String getChildActivitySet();

    /**
        * Sets the child activity set of this l f rollup rule.
    *
    * @param childActivitySet the child activity set of this l f rollup rule
    */
    public void setChildActivitySet(String childActivitySet);

    /**
    * Returns the minimum count of this l f rollup rule.
    *
    * @return the minimum count of this l f rollup rule
    */
    public Integer getMinimumCount();

    /**
        * Sets the minimum count of this l f rollup rule.
    *
    * @param minimumCount the minimum count of this l f rollup rule
    */
    public void setMinimumCount(Integer minimumCount);

    /**
    * Returns the minimum percent of this l f rollup rule.
    *
    * @return the minimum percent of this l f rollup rule
    */
    public BigDecimal getMinimumPercent();

    /**
        * Sets the minimum percent of this l f rollup rule.
    *
    * @param minimumPercent the minimum percent of this l f rollup rule
    */
    public void setMinimumPercent(BigDecimal minimumPercent);

    /**
    * Returns the action of this l f rollup rule.
    *
    * @return the action of this l f rollup rule
    */
    @AutoEscape
    public String getAction();

    /**
        * Sets the action of this l f rollup rule.
    *
    * @param action the action of this l f rollup rule
    */
    public void setAction(String action);

    public boolean isNew();

    public void setNew(boolean n);

    public boolean isCachedModel();

    public void setCachedModel(boolean cachedModel);

    public boolean isEscapedModel();

    public Serializable getPrimaryKeyObj();

    public void setPrimaryKeyObj(Serializable primaryKeyObj);

    public ExpandoBridge getExpandoBridge();

    public void setExpandoBridgeAttributes(ServiceContext serviceContext);

    public Object clone();

    public int compareTo(LFRollupRule lfRollupRule);

    public int hashCode();

    public CacheModel<LFRollupRule> toCacheModel();

    public LFRollupRule toEscapedModel();

    public String toString();

    public String toXmlString();
}
