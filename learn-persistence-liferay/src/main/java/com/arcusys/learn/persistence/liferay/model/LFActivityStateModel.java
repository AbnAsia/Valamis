package com.arcusys.learn.persistence.liferay.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.math.BigDecimal;

/**
* The base model interface for the LFActivityState service. Represents a row in the &quot;Learn_LFActivityState&quot; database table, with each column mapped to a property of this class.
*
* <p>
    * This interface and its corresponding implementation {@link com.arcusys.learn.persistence.liferay.model.impl.LFActivityStateModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.arcusys.learn.persistence.liferay.model.impl.LFActivityStateImpl}.
    * </p>
*
* @author Brian Wing Shun Chan
* @see LFActivityState
* @see com.arcusys.learn.persistence.liferay.model.impl.LFActivityStateImpl
* @see com.arcusys.learn.persistence.liferay.model.impl.LFActivityStateModelImpl
* @generated
*/
public interface LFActivityStateModel extends BaseModel<LFActivityState> {
    /*
    * NOTE FOR DEVELOPERS:
    *
    * Never modify or reference this interface directly. All methods that expect a l f activity state model instance should use the {@link LFActivityState} interface instead.
    */

    /**
    * Returns the primary key of this l f activity state.
    *
    * @return the primary key of this l f activity state
    */
    public long getPrimaryKey();

    /**
    * Sets the primary key of this l f activity state.
    *
    * @param primaryKey the primary key of this l f activity state
    */
    public void setPrimaryKey(long primaryKey);

    /**
    * Returns the ID of this l f activity state.
    *
    * @return the ID of this l f activity state
    */
    public long getId();

    /**
        * Sets the ID of this l f activity state.
    *
    * @param id the ID of this l f activity state
    */
    public void setId(long id);

    /**
    * Returns the package i d of this l f activity state.
    *
    * @return the package i d of this l f activity state
    */
    public Integer getPackageID();

    /**
        * Sets the package i d of this l f activity state.
    *
    * @param packageID the package i d of this l f activity state
    */
    public void setPackageID(Integer packageID);

    /**
    * Returns the activity i d of this l f activity state.
    *
    * @return the activity i d of this l f activity state
    */
    @AutoEscape
    public String getActivityID();

    /**
        * Sets the activity i d of this l f activity state.
    *
    * @param activityID the activity i d of this l f activity state
    */
    public void setActivityID(String activityID);

    /**
    * Returns the active of this l f activity state.
    *
    * @return the active of this l f activity state
    */
    public Boolean getActive();

    /**
        * Sets the active of this l f activity state.
    *
    * @param active the active of this l f activity state
    */
    public void setActive(Boolean active);

    /**
    * Returns the suspended of this l f activity state.
    *
    * @return the suspended of this l f activity state
    */
    public Boolean getSuspended();

    /**
        * Sets the suspended of this l f activity state.
    *
    * @param suspended the suspended of this l f activity state
    */
    public void setSuspended(Boolean suspended);

    /**
    * Returns the attempt completed of this l f activity state.
    *
    * @return the attempt completed of this l f activity state
    */
    public Boolean getAttemptCompleted();

    /**
        * Sets the attempt completed of this l f activity state.
    *
    * @param attemptCompleted the attempt completed of this l f activity state
    */
    public void setAttemptCompleted(Boolean attemptCompleted);

    /**
    * Returns the attempt completion amount of this l f activity state.
    *
    * @return the attempt completion amount of this l f activity state
    */
    public BigDecimal getAttemptCompletionAmount();

    /**
        * Sets the attempt completion amount of this l f activity state.
    *
    * @param attemptCompletionAmount the attempt completion amount of this l f activity state
    */
    public void setAttemptCompletionAmount(BigDecimal attemptCompletionAmount);

    /**
    * Returns the attempt absolute duration of this l f activity state.
    *
    * @return the attempt absolute duration of this l f activity state
    */
    public BigDecimal getAttemptAbsoluteDuration();

    /**
        * Sets the attempt absolute duration of this l f activity state.
    *
    * @param attemptAbsoluteDuration the attempt absolute duration of this l f activity state
    */
    public void setAttemptAbsoluteDuration(BigDecimal attemptAbsoluteDuration);

    /**
    * Returns the attempt experienced duration of this l f activity state.
    *
    * @return the attempt experienced duration of this l f activity state
    */
    public BigDecimal getAttemptExperiencedDuration();

    /**
        * Sets the attempt experienced duration of this l f activity state.
    *
    * @param attemptExperiencedDuration the attempt experienced duration of this l f activity state
    */
    public void setAttemptExperiencedDuration(
        BigDecimal attemptExperiencedDuration);

    /**
    * Returns the activity absolute duration of this l f activity state.
    *
    * @return the activity absolute duration of this l f activity state
    */
    public BigDecimal getActivityAbsoluteDuration();

    /**
        * Sets the activity absolute duration of this l f activity state.
    *
    * @param activityAbsoluteDuration the activity absolute duration of this l f activity state
    */
    public void setActivityAbsoluteDuration(BigDecimal activityAbsoluteDuration);

    /**
    * Returns the activity experienced duration of this l f activity state.
    *
    * @return the activity experienced duration of this l f activity state
    */
    public BigDecimal getActivityExperiencedDuration();

    /**
        * Sets the activity experienced duration of this l f activity state.
    *
    * @param activityExperiencedDuration the activity experienced duration of this l f activity state
    */
    public void setActivityExperiencedDuration(
        BigDecimal activityExperiencedDuration);

    /**
    * Returns the attempt count of this l f activity state.
    *
    * @return the attempt count of this l f activity state
    */
    public Integer getAttemptCount();

    /**
        * Sets the attempt count of this l f activity state.
    *
    * @param attemptCount the attempt count of this l f activity state
    */
    public void setAttemptCount(Integer attemptCount);

    /**
    * Returns the activity state node i d of this l f activity state.
    *
    * @return the activity state node i d of this l f activity state
    */
    public Integer getActivityStateNodeID();

    /**
        * Sets the activity state node i d of this l f activity state.
    *
    * @param activityStateNodeID the activity state node i d of this l f activity state
    */
    public void setActivityStateNodeID(Integer activityStateNodeID);

    /**
    * Returns the activity state tree i d of this l f activity state.
    *
    * @return the activity state tree i d of this l f activity state
    */
    public Integer getActivityStateTreeID();

    /**
        * Sets the activity state tree i d of this l f activity state.
    *
    * @param activityStateTreeID the activity state tree i d of this l f activity state
    */
    public void setActivityStateTreeID(Integer activityStateTreeID);

    public boolean isNew();

    public void setNew(boolean n);

    public boolean isCachedModel();

    public void setCachedModel(boolean cachedModel);

    public boolean isEscapedModel();

    public Serializable getPrimaryKeyObj();

    public void setPrimaryKeyObj(Serializable primaryKeyObj);

    public ExpandoBridge getExpandoBridge();

    public void setExpandoBridgeAttributes(ServiceContext serviceContext);

    public Object clone();

    public int compareTo(LFActivityState lfActivityState);

    public int hashCode();

    public CacheModel<LFActivityState> toCacheModel();

    public LFActivityState toEscapedModel();

    public String toString();

    public String toXmlString();
}
