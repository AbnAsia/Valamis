package com.arcusys.learn.persistence.liferay.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the LFPlayerScopeRule service. Represents a row in the &quot;Learn_LFPlayerScopeRule&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.arcusys.learn.persistence.liferay.model.impl.LFPlayerScopeRuleModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.arcusys.learn.persistence.liferay.model.impl.LFPlayerScopeRuleImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see LFPlayerScopeRule
 * @see com.arcusys.learn.persistence.liferay.model.impl.LFPlayerScopeRuleImpl
 * @see com.arcusys.learn.persistence.liferay.model.impl.LFPlayerScopeRuleModelImpl
 * @generated
 */
public interface LFPlayerScopeRuleModel extends BaseModel<LFPlayerScopeRule> {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this interface directly. All methods that expect a l f player scope rule model instance should use the {@link LFPlayerScopeRule} interface instead.
     */

    /**
     * Returns the primary key of this l f player scope rule.
     *
     * @return the primary key of this l f player scope rule
     */
    public long getPrimaryKey();

    /**
     * Sets the primary key of this l f player scope rule.
     *
     * @param primaryKey the primary key of this l f player scope rule
     */
    public void setPrimaryKey(long primaryKey);

    /**
     * Returns the ID of this l f player scope rule.
     *
     * @return the ID of this l f player scope rule
     */
    public long getId();

    /**
     * Sets the ID of this l f player scope rule.
     *
     * @param id the ID of this l f player scope rule
     */
    public void setId(long id);

    /**
     * Returns the player i d of this l f player scope rule.
     *
     * @return the player i d of this l f player scope rule
     */
    @AutoEscape
    public String getPlayerID();

    /**
     * Sets the player i d of this l f player scope rule.
     *
     * @param playerID the player i d of this l f player scope rule
     */
    public void setPlayerID(String playerID);

    /**
     * Returns the scope of this l f player scope rule.
     *
     * @return the scope of this l f player scope rule
     */
    @AutoEscape
    public String getScope();

    /**
     * Sets the scope of this l f player scope rule.
     *
     * @param scope the scope of this l f player scope rule
     */
    public void setScope(String scope);

    @Override
    public boolean isNew();

    @Override
    public void setNew(boolean n);

    @Override
    public boolean isCachedModel();

    @Override
    public void setCachedModel(boolean cachedModel);

    @Override
    public boolean isEscapedModel();

    @Override
    public Serializable getPrimaryKeyObj();

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj);

    @Override
    public ExpandoBridge getExpandoBridge();

    @Override
    public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

    @Override
    public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext);

    @Override
    public Object clone();

    @Override
    public int compareTo(LFPlayerScopeRule lfPlayerScopeRule);

    @Override
    public int hashCode();

    @Override
    public CacheModel<LFPlayerScopeRule> toCacheModel();

    @Override
    public LFPlayerScopeRule toEscapedModel();

    @Override
    public LFPlayerScopeRule toUnescapedModel();

    @Override
    public String toString();

    @Override
    public String toXmlString();
}
