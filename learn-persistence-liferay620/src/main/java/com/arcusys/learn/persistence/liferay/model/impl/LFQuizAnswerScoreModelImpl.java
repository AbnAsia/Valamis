package com.arcusys.learn.persistence.liferay.model.impl;

import com.arcusys.learn.persistence.liferay.model.LFQuizAnswerScore;
import com.arcusys.learn.persistence.liferay.model.LFQuizAnswerScoreModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the LFQuizAnswerScore service. Represents a row in the &quot;Learn_LFQuizAnswerScore&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.arcusys.learn.persistence.liferay.model.LFQuizAnswerScoreModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link LFQuizAnswerScoreImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see LFQuizAnswerScoreImpl
 * @see com.arcusys.learn.persistence.liferay.model.LFQuizAnswerScore
 * @see com.arcusys.learn.persistence.liferay.model.LFQuizAnswerScoreModel
 * @generated
 */
public class LFQuizAnswerScoreModelImpl extends BaseModelImpl<LFQuizAnswerScore>
    implements LFQuizAnswerScoreModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a l f quiz answer score model instance should use the {@link com.arcusys.learn.persistence.liferay.model.LFQuizAnswerScore} interface instead.
     */
    public static final String TABLE_NAME = "Learn_LFQuizAnswerScore";
    public static final Object[][] TABLE_COLUMNS = {
            { "answerId", Types.BIGINT },
            { "score", Types.DOUBLE }
        };
    public static final String TABLE_SQL_CREATE = "create table Learn_LFQuizAnswerScore (answerId LONG not null primary key,score DOUBLE null)";
    public static final String TABLE_SQL_DROP = "drop table Learn_LFQuizAnswerScore";
    public static final String ORDER_BY_JPQL = " ORDER BY lfQuizAnswerScore.answerId ASC";
    public static final String ORDER_BY_SQL = " ORDER BY Learn_LFQuizAnswerScore.answerId ASC";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.arcusys.learn.persistence.liferay.model.LFQuizAnswerScore"),
            false);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.arcusys.learn.persistence.liferay.model.LFQuizAnswerScore"),
            false);
    public static final boolean COLUMN_BITMASK_ENABLED = false;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.com.arcusys.learn.persistence.liferay.model.LFQuizAnswerScore"));
    private static ClassLoader _classLoader = LFQuizAnswerScore.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            LFQuizAnswerScore.class
        };
    private long _answerId;
    private Double _score;
    private LFQuizAnswerScore _escapedModel;

    public LFQuizAnswerScoreModelImpl() {
    }

    @Override
    public long getPrimaryKey() {
        return _answerId;
    }

    @Override
    public void setPrimaryKey(long primaryKey) {
        setAnswerId(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _answerId;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Long) primaryKeyObj).longValue());
    }

    @Override
    public Class<?> getModelClass() {
        return LFQuizAnswerScore.class;
    }

    @Override
    public String getModelClassName() {
        return LFQuizAnswerScore.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("answerId", getAnswerId());
        attributes.put("score", getScore());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Long answerId = (Long) attributes.get("answerId");

        if (answerId != null) {
            setAnswerId(answerId);
        }

        Double score = (Double) attributes.get("score");

        if (score != null) {
            setScore(score);
        }
    }

    @Override
    public long getAnswerId() {
        return _answerId;
    }

    @Override
    public void setAnswerId(long answerId) {
        _answerId = answerId;
    }

    @Override
    public Double getScore() {
        return _score;
    }

    @Override
    public void setScore(Double score) {
        _score = score;
    }

    @Override
    public ExpandoBridge getExpandoBridge() {
        return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
            LFQuizAnswerScore.class.getName(), getPrimaryKey());
    }

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
        ExpandoBridge expandoBridge = getExpandoBridge();

        expandoBridge.setAttributes(serviceContext);
    }

    @Override
    public LFQuizAnswerScore toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (LFQuizAnswerScore) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        LFQuizAnswerScoreImpl lfQuizAnswerScoreImpl = new LFQuizAnswerScoreImpl();

        lfQuizAnswerScoreImpl.setAnswerId(getAnswerId());
        lfQuizAnswerScoreImpl.setScore(getScore());

        lfQuizAnswerScoreImpl.resetOriginalValues();

        return lfQuizAnswerScoreImpl;
    }

    @Override
    public int compareTo(LFQuizAnswerScore lfQuizAnswerScore) {
        long primaryKey = lfQuizAnswerScore.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof LFQuizAnswerScore)) {
            return false;
        }

        LFQuizAnswerScore lfQuizAnswerScore = (LFQuizAnswerScore) obj;

        long primaryKey = lfQuizAnswerScore.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return (int) getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
    }

    @Override
    public CacheModel<LFQuizAnswerScore> toCacheModel() {
        LFQuizAnswerScoreCacheModel lfQuizAnswerScoreCacheModel = new LFQuizAnswerScoreCacheModel();

        lfQuizAnswerScoreCacheModel.answerId = getAnswerId();

        lfQuizAnswerScoreCacheModel.score = getScore();

        return lfQuizAnswerScoreCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(5);

        sb.append("{answerId=");
        sb.append(getAnswerId());
        sb.append(", score=");
        sb.append(getScore());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(10);

        sb.append("<model><model-name>");
        sb.append(
            "com.arcusys.learn.persistence.liferay.model.LFQuizAnswerScore");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>answerId</column-name><column-value><![CDATA[");
        sb.append(getAnswerId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>score</column-name><column-value><![CDATA[");
        sb.append(getScore());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
