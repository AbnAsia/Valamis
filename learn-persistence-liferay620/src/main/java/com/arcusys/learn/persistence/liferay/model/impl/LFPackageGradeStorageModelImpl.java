package com.arcusys.learn.persistence.liferay.model.impl;

import com.arcusys.learn.persistence.liferay.model.LFPackageGradeStorage;
import com.arcusys.learn.persistence.liferay.model.LFPackageGradeStorageModel;
import com.arcusys.learn.persistence.liferay.service.persistence.LFPackageGradeStoragePK;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the LFPackageGradeStorage service. Represents a row in the &quot;Learn_LFPackageGradeStorage&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.arcusys.learn.persistence.liferay.model.LFPackageGradeStorageModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link LFPackageGradeStorageImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see LFPackageGradeStorageImpl
 * @see com.arcusys.learn.persistence.liferay.model.LFPackageGradeStorage
 * @see com.arcusys.learn.persistence.liferay.model.LFPackageGradeStorageModel
 * @generated
 */
public class LFPackageGradeStorageModelImpl extends BaseModelImpl<LFPackageGradeStorage>
    implements LFPackageGradeStorageModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a l f package grade storage model instance should use the {@link com.arcusys.learn.persistence.liferay.model.LFPackageGradeStorage} interface instead.
     */
    public static final String TABLE_NAME = "Learn_LFPackageGradeStorage";
    public static final Object[][] TABLE_COLUMNS = {
            { "userId", Types.BIGINT },
            { "packageId", Types.BIGINT },
            { "grade", Types.VARCHAR },
            { "comment_", Types.VARCHAR }
        };
    public static final String TABLE_SQL_CREATE = "create table Learn_LFPackageGradeStorage (userId LONG not null,packageId LONG not null,grade VARCHAR(75) null,comment_ VARCHAR(75) null,primary key (userId, packageId))";
    public static final String TABLE_SQL_DROP = "drop table Learn_LFPackageGradeStorage";
    public static final String ORDER_BY_JPQL = " ORDER BY lfPackageGradeStorage.id.userId ASC, lfPackageGradeStorage.id.packageId ASC";
    public static final String ORDER_BY_SQL = " ORDER BY Learn_LFPackageGradeStorage.userId ASC, Learn_LFPackageGradeStorage.packageId ASC";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.arcusys.learn.persistence.liferay.model.LFPackageGradeStorage"),
            false);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.arcusys.learn.persistence.liferay.model.LFPackageGradeStorage"),
            false);
    public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.column.bitmask.enabled.com.arcusys.learn.persistence.liferay.model.LFPackageGradeStorage"),
            true);
    public static long PACKAGEID_COLUMN_BITMASK = 1L;
    public static long USERID_COLUMN_BITMASK = 2L;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.com.arcusys.learn.persistence.liferay.model.LFPackageGradeStorage"));
    private static ClassLoader _classLoader = LFPackageGradeStorage.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            LFPackageGradeStorage.class
        };
    private Long _userId;
    private Long _originalUserId;
    private boolean _setOriginalUserId;
    private Long _packageId;
    private Long _originalPackageId;
    private boolean _setOriginalPackageId;
    private String _grade;
    private String _comment;
    private long _columnBitmask;
    private LFPackageGradeStorage _escapedModel;

    public LFPackageGradeStorageModelImpl() {
    }

    @Override
    public LFPackageGradeStoragePK getPrimaryKey() {
        return new LFPackageGradeStoragePK(_userId, _packageId);
    }

    @Override
    public void setPrimaryKey(LFPackageGradeStoragePK primaryKey) {
        setUserId(primaryKey.userId);
        setPackageId(primaryKey.packageId);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return new LFPackageGradeStoragePK(_userId, _packageId);
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey((LFPackageGradeStoragePK) primaryKeyObj);
    }

    @Override
    public Class<?> getModelClass() {
        return LFPackageGradeStorage.class;
    }

    @Override
    public String getModelClassName() {
        return LFPackageGradeStorage.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("userId", getUserId());
        attributes.put("packageId", getPackageId());
        attributes.put("grade", getGrade());
        attributes.put("comment", getComment());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Long userId = (Long) attributes.get("userId");

        if (userId != null) {
            setUserId(userId);
        }

        Long packageId = (Long) attributes.get("packageId");

        if (packageId != null) {
            setPackageId(packageId);
        }

        String grade = (String) attributes.get("grade");

        if (grade != null) {
            setGrade(grade);
        }

        String comment = (String) attributes.get("comment");

        if (comment != null) {
            setComment(comment);
        }
    }

    @Override
    public Long getUserId() {
        return _userId;
    }

    @Override
    public void setUserId(Long userId) {
        _columnBitmask |= USERID_COLUMN_BITMASK;

        if (!_setOriginalUserId) {
            _setOriginalUserId = true;

            _originalUserId = _userId;
        }

        _userId = userId;
    }

    public Long getOriginalUserId() {
        return _originalUserId;
    }

    @Override
    public Long getPackageId() {
        return _packageId;
    }

    @Override
    public void setPackageId(Long packageId) {
        _columnBitmask |= PACKAGEID_COLUMN_BITMASK;

        if (!_setOriginalPackageId) {
            _setOriginalPackageId = true;

            _originalPackageId = _packageId;
        }

        _packageId = packageId;
    }

    public Long getOriginalPackageId() {
        return _originalPackageId;
    }

    @Override
    public String getGrade() {
        if (_grade == null) {
            return StringPool.BLANK;
        } else {
            return _grade;
        }
    }

    @Override
    public void setGrade(String grade) {
        _grade = grade;
    }

    @Override
    public String getComment() {
        if (_comment == null) {
            return StringPool.BLANK;
        } else {
            return _comment;
        }
    }

    @Override
    public void setComment(String comment) {
        _comment = comment;
    }

    public long getColumnBitmask() {
        return _columnBitmask;
    }

    @Override
    public LFPackageGradeStorage toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (LFPackageGradeStorage) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        LFPackageGradeStorageImpl lfPackageGradeStorageImpl = new LFPackageGradeStorageImpl();

        lfPackageGradeStorageImpl.setUserId(getUserId());
        lfPackageGradeStorageImpl.setPackageId(getPackageId());
        lfPackageGradeStorageImpl.setGrade(getGrade());
        lfPackageGradeStorageImpl.setComment(getComment());

        lfPackageGradeStorageImpl.resetOriginalValues();

        return lfPackageGradeStorageImpl;
    }

    @Override
    public int compareTo(LFPackageGradeStorage lfPackageGradeStorage) {
        LFPackageGradeStoragePK primaryKey = lfPackageGradeStorage.getPrimaryKey();

        return getPrimaryKey().compareTo(primaryKey);
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof LFPackageGradeStorage)) {
            return false;
        }

        LFPackageGradeStorage lfPackageGradeStorage = (LFPackageGradeStorage) obj;

        LFPackageGradeStoragePK primaryKey = lfPackageGradeStorage.getPrimaryKey();

        if (getPrimaryKey().equals(primaryKey)) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey().hashCode();
    }

    @Override
    public void resetOriginalValues() {
        LFPackageGradeStorageModelImpl lfPackageGradeStorageModelImpl = this;

        lfPackageGradeStorageModelImpl._originalUserId = lfPackageGradeStorageModelImpl._userId;

        lfPackageGradeStorageModelImpl._setOriginalUserId = false;

        lfPackageGradeStorageModelImpl._originalPackageId = lfPackageGradeStorageModelImpl._packageId;

        lfPackageGradeStorageModelImpl._setOriginalPackageId = false;

        lfPackageGradeStorageModelImpl._columnBitmask = 0;
    }

    @Override
    public CacheModel<LFPackageGradeStorage> toCacheModel() {
        LFPackageGradeStorageCacheModel lfPackageGradeStorageCacheModel = new LFPackageGradeStorageCacheModel();

        lfPackageGradeStorageCacheModel.userId = getUserId();

        lfPackageGradeStorageCacheModel.packageId = getPackageId();

        lfPackageGradeStorageCacheModel.grade = getGrade();

        String grade = lfPackageGradeStorageCacheModel.grade;

        if ((grade != null) && (grade.length() == 0)) {
            lfPackageGradeStorageCacheModel.grade = null;
        }

        lfPackageGradeStorageCacheModel.comment = getComment();

        String comment = lfPackageGradeStorageCacheModel.comment;

        if ((comment != null) && (comment.length() == 0)) {
            lfPackageGradeStorageCacheModel.comment = null;
        }

        return lfPackageGradeStorageCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(9);

        sb.append("{userId=");
        sb.append(getUserId());
        sb.append(", packageId=");
        sb.append(getPackageId());
        sb.append(", grade=");
        sb.append(getGrade());
        sb.append(", comment=");
        sb.append(getComment());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(16);

        sb.append("<model><model-name>");
        sb.append(
            "com.arcusys.learn.persistence.liferay.model.LFPackageGradeStorage");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>userId</column-name><column-value><![CDATA[");
        sb.append(getUserId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>packageId</column-name><column-value><![CDATA[");
        sb.append(getPackageId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>grade</column-name><column-value><![CDATA[");
        sb.append(getGrade());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>comment</column-name><column-value><![CDATA[");
        sb.append(getComment());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
