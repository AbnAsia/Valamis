package com.arcusys.learn.persistence.liferay.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the LFActivityStateNode service. Represents a row in the &quot;Learn_LFActivityStateNode&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.arcusys.learn.persistence.liferay.model.impl.LFActivityStateNodeModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.arcusys.learn.persistence.liferay.model.impl.LFActivityStateNodeImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see LFActivityStateNode
 * @see com.arcusys.learn.persistence.liferay.model.impl.LFActivityStateNodeImpl
 * @see com.arcusys.learn.persistence.liferay.model.impl.LFActivityStateNodeModelImpl
 * @generated
 */
public interface LFActivityStateNodeModel extends BaseModel<LFActivityStateNode> {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this interface directly. All methods that expect a l f activity state node model instance should use the {@link LFActivityStateNode} interface instead.
     */

    /**
     * Returns the primary key of this l f activity state node.
     *
     * @return the primary key of this l f activity state node
     */
    public long getPrimaryKey();

    /**
     * Sets the primary key of this l f activity state node.
     *
     * @param primaryKey the primary key of this l f activity state node
     */
    public void setPrimaryKey(long primaryKey);

    /**
     * Returns the ID of this l f activity state node.
     *
     * @return the ID of this l f activity state node
     */
    public long getId();

    /**
     * Sets the ID of this l f activity state node.
     *
     * @param id the ID of this l f activity state node
     */
    public void setId(long id);

    /**
     * Returns the parent i d of this l f activity state node.
     *
     * @return the parent i d of this l f activity state node
     */
    public Integer getParentID();

    /**
     * Sets the parent i d of this l f activity state node.
     *
     * @param parentID the parent i d of this l f activity state node
     */
    public void setParentID(Integer parentID);

    /**
     * Returns the tree i d of this l f activity state node.
     *
     * @return the tree i d of this l f activity state node
     */
    public Integer getTreeID();

    /**
     * Sets the tree i d of this l f activity state node.
     *
     * @param treeID the tree i d of this l f activity state node
     */
    public void setTreeID(Integer treeID);

    /**
     * Returns the available children i ds of this l f activity state node.
     *
     * @return the available children i ds of this l f activity state node
     */
    @AutoEscape
    public String getAvailableChildrenIDs();

    /**
     * Sets the available children i ds of this l f activity state node.
     *
     * @param availableChildrenIDs the available children i ds of this l f activity state node
     */
    public void setAvailableChildrenIDs(String availableChildrenIDs);

    @Override
    public boolean isNew();

    @Override
    public void setNew(boolean n);

    @Override
    public boolean isCachedModel();

    @Override
    public void setCachedModel(boolean cachedModel);

    @Override
    public boolean isEscapedModel();

    @Override
    public Serializable getPrimaryKeyObj();

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj);

    @Override
    public ExpandoBridge getExpandoBridge();

    @Override
    public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

    @Override
    public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext);

    @Override
    public Object clone();

    @Override
    public int compareTo(LFActivityStateNode lfActivityStateNode);

    @Override
    public int hashCode();

    @Override
    public CacheModel<LFActivityStateNode> toCacheModel();

    @Override
    public LFActivityStateNode toEscapedModel();

    @Override
    public LFActivityStateNode toUnescapedModel();

    @Override
    public String toString();

    @Override
    public String toXmlString();
}
