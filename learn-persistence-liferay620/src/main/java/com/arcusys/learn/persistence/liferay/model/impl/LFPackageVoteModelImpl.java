package com.arcusys.learn.persistence.liferay.model.impl;

import com.arcusys.learn.persistence.liferay.model.LFPackageVote;
import com.arcusys.learn.persistence.liferay.model.LFPackageVoteModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the LFPackageVote service. Represents a row in the &quot;Learn_LFPackageVote&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.arcusys.learn.persistence.liferay.model.LFPackageVoteModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link LFPackageVoteImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see LFPackageVoteImpl
 * @see com.arcusys.learn.persistence.liferay.model.LFPackageVote
 * @see com.arcusys.learn.persistence.liferay.model.LFPackageVoteModel
 * @generated
 */
public class LFPackageVoteModelImpl extends BaseModelImpl<LFPackageVote>
    implements LFPackageVoteModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a l f package vote model instance should use the {@link com.arcusys.learn.persistence.liferay.model.LFPackageVote} interface instead.
     */
    public static final String TABLE_NAME = "Learn_LFPackageVote";
    public static final Object[][] TABLE_COLUMNS = {
            { "id_", Types.BIGINT },
            { "userID", Types.INTEGER },
            { "socialPackageID", Types.INTEGER },
            { "voteValue", Types.INTEGER }
        };
    public static final String TABLE_SQL_CREATE = "create table Learn_LFPackageVote (id_ LONG not null primary key,userID INTEGER null,socialPackageID INTEGER null,voteValue INTEGER null)";
    public static final String TABLE_SQL_DROP = "drop table Learn_LFPackageVote";
    public static final String ORDER_BY_JPQL = " ORDER BY lfPackageVote.id ASC";
    public static final String ORDER_BY_SQL = " ORDER BY Learn_LFPackageVote.id_ ASC";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.arcusys.learn.persistence.liferay.model.LFPackageVote"),
            false);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.arcusys.learn.persistence.liferay.model.LFPackageVote"),
            false);
    public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.column.bitmask.enabled.com.arcusys.learn.persistence.liferay.model.LFPackageVote"),
            true);
    public static long SOCIALPACKAGEID_COLUMN_BITMASK = 1L;
    public static long ID_COLUMN_BITMASK = 2L;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.com.arcusys.learn.persistence.liferay.model.LFPackageVote"));
    private static ClassLoader _classLoader = LFPackageVote.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            LFPackageVote.class
        };
    private long _id;
    private Integer _userID;
    private Integer _socialPackageID;
    private Integer _originalSocialPackageID;
    private boolean _setOriginalSocialPackageID;
    private Integer _voteValue;
    private long _columnBitmask;
    private LFPackageVote _escapedModel;

    public LFPackageVoteModelImpl() {
    }

    @Override
    public long getPrimaryKey() {
        return _id;
    }

    @Override
    public void setPrimaryKey(long primaryKey) {
        setId(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _id;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Long) primaryKeyObj).longValue());
    }

    @Override
    public Class<?> getModelClass() {
        return LFPackageVote.class;
    }

    @Override
    public String getModelClassName() {
        return LFPackageVote.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("id", getId());
        attributes.put("userID", getUserID());
        attributes.put("socialPackageID", getSocialPackageID());
        attributes.put("voteValue", getVoteValue());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Long id = (Long) attributes.get("id");

        if (id != null) {
            setId(id);
        }

        Integer userID = (Integer) attributes.get("userID");

        if (userID != null) {
            setUserID(userID);
        }

        Integer socialPackageID = (Integer) attributes.get("socialPackageID");

        if (socialPackageID != null) {
            setSocialPackageID(socialPackageID);
        }

        Integer voteValue = (Integer) attributes.get("voteValue");

        if (voteValue != null) {
            setVoteValue(voteValue);
        }
    }

    @Override
    public long getId() {
        return _id;
    }

    @Override
    public void setId(long id) {
        _id = id;
    }

    @Override
    public Integer getUserID() {
        return _userID;
    }

    @Override
    public void setUserID(Integer userID) {
        _userID = userID;
    }

    @Override
    public Integer getSocialPackageID() {
        return _socialPackageID;
    }

    @Override
    public void setSocialPackageID(Integer socialPackageID) {
        _columnBitmask |= SOCIALPACKAGEID_COLUMN_BITMASK;

        if (!_setOriginalSocialPackageID) {
            _setOriginalSocialPackageID = true;

            _originalSocialPackageID = _socialPackageID;
        }

        _socialPackageID = socialPackageID;
    }

    public Integer getOriginalSocialPackageID() {
        return _originalSocialPackageID;
    }

    @Override
    public Integer getVoteValue() {
        return _voteValue;
    }

    @Override
    public void setVoteValue(Integer voteValue) {
        _voteValue = voteValue;
    }

    public long getColumnBitmask() {
        return _columnBitmask;
    }

    @Override
    public ExpandoBridge getExpandoBridge() {
        return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
            LFPackageVote.class.getName(), getPrimaryKey());
    }

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
        ExpandoBridge expandoBridge = getExpandoBridge();

        expandoBridge.setAttributes(serviceContext);
    }

    @Override
    public LFPackageVote toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (LFPackageVote) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        LFPackageVoteImpl lfPackageVoteImpl = new LFPackageVoteImpl();

        lfPackageVoteImpl.setId(getId());
        lfPackageVoteImpl.setUserID(getUserID());
        lfPackageVoteImpl.setSocialPackageID(getSocialPackageID());
        lfPackageVoteImpl.setVoteValue(getVoteValue());

        lfPackageVoteImpl.resetOriginalValues();

        return lfPackageVoteImpl;
    }

    @Override
    public int compareTo(LFPackageVote lfPackageVote) {
        long primaryKey = lfPackageVote.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof LFPackageVote)) {
            return false;
        }

        LFPackageVote lfPackageVote = (LFPackageVote) obj;

        long primaryKey = lfPackageVote.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return (int) getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
        LFPackageVoteModelImpl lfPackageVoteModelImpl = this;

        lfPackageVoteModelImpl._originalSocialPackageID = lfPackageVoteModelImpl._socialPackageID;

        lfPackageVoteModelImpl._setOriginalSocialPackageID = false;

        lfPackageVoteModelImpl._columnBitmask = 0;
    }

    @Override
    public CacheModel<LFPackageVote> toCacheModel() {
        LFPackageVoteCacheModel lfPackageVoteCacheModel = new LFPackageVoteCacheModel();

        lfPackageVoteCacheModel.id = getId();

        lfPackageVoteCacheModel.userID = getUserID();

        lfPackageVoteCacheModel.socialPackageID = getSocialPackageID();

        lfPackageVoteCacheModel.voteValue = getVoteValue();

        return lfPackageVoteCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(9);

        sb.append("{id=");
        sb.append(getId());
        sb.append(", userID=");
        sb.append(getUserID());
        sb.append(", socialPackageID=");
        sb.append(getSocialPackageID());
        sb.append(", voteValue=");
        sb.append(getVoteValue());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(16);

        sb.append("<model><model-name>");
        sb.append("com.arcusys.learn.persistence.liferay.model.LFPackageVote");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>id</column-name><column-value><![CDATA[");
        sb.append(getId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>userID</column-name><column-value><![CDATA[");
        sb.append(getUserID());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>socialPackageID</column-name><column-value><![CDATA[");
        sb.append(getSocialPackageID());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>voteValue</column-name><column-value><![CDATA[");
        sb.append(getVoteValue());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
